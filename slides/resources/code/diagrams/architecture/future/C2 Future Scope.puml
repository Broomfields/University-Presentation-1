    @startuml "Support Tracker - Container (Future Scope) Diagram"

    !include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

    SHOW_PERSON_OUTLINE()

    ' Styling
    hide empty members
    skinparam defaultFontStyle Monospaced
    skinparam shadowing false
    skinparam handwritten false
    skinparam nodesep 150
    skinparam ranksep 100
    skinparam Linetype ortho

    title "Support Tracker - Container (Future Scope) Diagram"

    AddBoundaryTag("API_Background", $bgColor="lightblue", $fontColor="black", $borderColor="black")

    ' Define the system
    together {
        System_Boundary(s1, "Support Tracker System") {

            Container_Boundary(c1, "Support Tracker System API", $tags="API_Background") {

                ' Define Containers
                together {
                    Container(uiComponents, "User-Interface Components", "MFC DLL", "Contains windows forms and user controls. Interfaces with Data Access Layer for data.")
                    Container(dataAccessLayer, "Data Access Layer", "MFC DLL", "Provides functions for reading/writing data, interfaces with SQL Server.")
                    Container(domain, "Domain", "MFC DLL", "Contains ref classes and ref structs, acts as a Domain Model.")
                }
            }
            SystemDb(tscServerDatabase, "TSC-Server", "MS SQL Server. (Hosts databases for internal tools.)")
        
            Container_Boundary(c2, "Support Tracker - Future Front-End") {

                together {
                    System(overviewTool, "Support Tracker Overview Tool", "Internal tool hosted on TSC-Server. Provides an overview of all tickets and related metrics.")
                    System(ticketCreationTool, "Support Tracker Creation Tool", "Internal tool hosted on TSC-Server. Creates a new support ticket.")
                    System(ticketManagementTool, "Support Tracker Management Tool", "Internal tool hosted on TSC-Server. Manages and tracks support ticket's and their events.")
                }
            }
            
            Container_Boundary(c3, "Support Tracker Future Back-End") {
                
                together {
                    System(backendNotificationTool, "Back-End Notification System", "Runs on TSC-Server. Notifies staff about ticket status changes relevant to them by reading the Support Tracker database.")
                    System(backendReportTool, "Back-End Report-Generation System", "Runs on TSC-Server. Generates summary and metrics reports by reading the Support Tracker database.")
                }
            }

        }

        System_Ext(tascompLibraries, "Tascomp Internal Libraries", "External Libraries. Used by the Support Tracker system.")

        ' Connect containers to each other
        overviewTool -down-> uiComponents
        ticketCreationTool -down-> uiComponents
        ticketManagementTool -down-> uiComponents

        uiComponents -down-> dataAccessLayer
        dataAccessLayer -right-> domain
        
        uiComponents -down-> backendReportTool
        backendNotificationTool -right-> dataAccessLayer
        backendReportTool -right-> dataAccessLayer
        backendReportTool -down-> backendNotificationTool

        ' Connect Data Access Layer to databases
        dataAccessLayer -down-> tscServerDatabase
    }

    ' Define external libraries
    System_Ext(tascompLibraries, "Tascomp Internal Libraries", "External Libraries. Used by the Data Access Layer.")

    ' Define actors and their interactions (From your context diagram)
    Person(seniorLeadership, "Senior Leadership", "Views Support summary and metrics.")
    Person(supportTeam, "Support Team", "Creates and manages support tickets.")
    Person(appTeam, "Applications Team", "Adds their own events (Linking Applications Tracking) to existing tickets.")
    Person(softwareTeam, "Software Team", "Adds their own events (Linking Software Tracking) to existing tickets.")
    Person(hardwareTeam, "Hardware Team", "Adds their own events (Linking Hardware Tracking) to existing tickets.")

    ' Connect actors to the main Tool Prototype container
    seniorLeadership -down-> overviewTool
    supportTeam --> ticketCreationTool
    supportTeam --> ticketManagementTool
    appTeam --> ticketManagementTool
    softwareTeam --> ticketManagementTool
    hardwareTeam --> ticketManagementTool

    ' Connection between Data Access Layer and external libraries
    uiComponents -left-> tascompLibraries
    dataAccessLayer -left-> tascompLibraries
    backendNotificationTool -left-> tascompLibraries

    SHOW_LEGEND()

    @enduml
